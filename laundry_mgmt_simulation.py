# -*- coding: utf-8 -*-
"""Myproject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MFBeg0tccPLpiEedM9tm7FYeO--djGgo
"""

from random import seed
from random import random
from random import randint
import time
# seed random number generator
seed(1)

def Empty(lis1):
    if len(lis1) == 0:
        return 0
    else:
        return 1

def Sort(sub_li):
    return (sorted(sub_li, key=lambda x: x[1], reverse=True))
    # return (sorted(sub_li, key=lambda x: x[1]))

def normalwash(arr,clock):
    clock=clock+(arr[2]*3)
    return clock

def drywash(arr,clock):
    clock=clock+(arr[2]*5)
    return clock


n=1  #sleep time
serial_no=0 #serial of customer
order=0   ##track serial
delivered=[]  ##to track delivary serial and time
arr=[]  #main array[arrival time,priority,no_of_cloths,wash_type,order_no]
sim_time=0  #simulation clock
wash_type=""
arrival_time=0
fully_customer_served=0
customer_served=0
delay=0

per_drywash_time=5
drywash_time=[0,0]  #drywash clock
arr_drywash=[]  #people in drywash queue

per_normalwash_time=3
normalwash_time=[0,0,0]  #normalwash clock
arr_normalwash=[] #people in normalwash queue
# normalwash_machine=[0,0,0,0,0]

while(sim_time<=120):
    sim_time+=1
    while Empty(delivered) and (sim_time == delivered[0][0]):
      print(f"simulation clock time is {sim_time}")
      print(f"Delivered list: {delivered}")
      print(f'Order {delivered[0][1]} has been delevered at {delivered[0][0]} .....')
      del delivered[0]
      fully_customer_served=fully_customer_served+1
    if(sim_time%3==1): #1 person in 3 minutes
        serial_no=serial_no+1
        no_of_cloth=randint(1,10)
        arrival_time=sim_time
        priority=randint(0,1) #1 means high priority,0 means low
        n=random()
        if(n<0.6):
          wash_type="normal"
        else:
          wash_type="Dry wash"
        val=(arrival_time,priority,no_of_cloth,wash_type,serial_no)
        arr.append(val)

    #send people to sub servers from main servers
    if Empty(arr):
        if(arr[0][3]=="normal"):
            arr_normalwash.append(arr[0])
            del arr[0]
        else:
            arr_drywash.append(arr[0])
            del arr[0]



    if Empty(arr_normalwash):
        for i in range (0,len(normalwash_time)):
           if (normalwash_time[i]<=sim_time) and Empty(arr_normalwash) :
            time.sleep(n)
            arr_normalwash=Sort(arr_normalwash)
            #print(f"simulation clock time is {sim_time}")
            print(f'Normalwash Array {arr_normalwash}')
            order=arr_normalwash[0][4]
            customer_served=customer_served+1

            if (normalwash_time[i] < arr_normalwash[0][0]):
                normalwash_time[i] = arr_normalwash[0][0]

            print(f"Serial {order} is  Normalwashing and has been taken by machine no {i+1} at {normalwash_time[i]}.....")
            delay=delay+(normalwash_time[i]-arr_normalwash[0][0])
            print(f"delay is {normalwash_time[i]-arr_normalwash[0][0]}") 
            normalwash_time[i]=normalwash(arr_normalwash[0],normalwash_time[i])
            del arr_normalwash[0]
            print(f"Order {order} will be delivered at {normalwash_time[i]}.....")
            # print(normalwash_time)
            val=(normalwash_time[i],order)
            delivered.append(val)

    if Empty(arr_drywash):
        for i in range (0,len(drywash_time)):
          if  (drywash_time[i] <= sim_time) and Empty(arr_drywash) : 
            time.sleep(n)
            arr_drywash = Sort(arr_drywash)
            #print(f"simulation clock time is {sim_time}")
            print(f'Dry wash Array {arr_drywash}')
            order=arr_drywash[0][4]
            customer_served=customer_served+1

            if (drywash_time[i] < arr_drywash[0][0]):
                drywash_time[i] = arr_drywash[0][0]  

            print(f"Order {order} is  Drywashing and has been taken  by  machine no {i+1} at {drywash_time[i]}.....")
            delay=delay+(drywash_time[i]-arr_drywash[0][0])
            print(f"delay is {drywash_time[i]-arr_drywash[0][0]}")

            drywash_time[i] = drywash(arr_drywash[0], drywash_time[i])
            del arr_drywash[0]
            print(f"Order {order} will be delivered at {drywash_time[i]}.....")
            # print(drywash_time)
            val = (drywash_time[i], order)
            delivered.append(val)


    delivered.sort()

print(f'\n\nTotal Numbers of delayed Customer: {customer_served}')
print(f'\nTotal customer Fully served: {fully_customer_served}')
print(f'\nTotal Delay: {delay}')
print(f'\nAvarage Delay per customer: {delay/customer_served}')